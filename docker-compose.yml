version: '3.8'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.4
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181

  kafka:
    image: confluentinc/cp-kafka:7.4.4
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: -1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_MESSAGE_MAX_BYTES: 20971520
      KAFKA_REPLICA_FETCH_MAX_BYTES: 20971520
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'

  user-db:
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 12345
      POSTGRES_DB: user
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 3

  user-service:
    build: ./lab_4/user
    image: user-service
    depends_on:
      user-db:
        condition: service_healthy
      kafka:
        condition: service_started
    ports:
      - "8081:8081"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://user-db:5432/user
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: 12345
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: org.postgresql.Driver
      JWT_SECRET: sheeesh
      JWT_ACCESS_TOKEN_LIFETIME: 1h
      JWT_REFRESH_TOKEN_LIFETIME: 1d
      SPRING_KAFKA_CONSUMER_BOOTSTRAP_SERVERS: kafka:9092
      SPRING_KAFKA_PRODUCER_BOOTSTRAP_SERVERS: kafka:9092

  booking-db:
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 12345
      POSTGRES_DB: booking
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 3

  booking-service:
    build: ./lab_4/booking
    image: booking-service
    depends_on:
      booking-db:
        condition: service_healthy
      kafka:
        condition: service_started
    ports:
      - "8082:8082"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://booking-db:5432/booking
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: 12345
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: org.postgresql.Driver
      JWT_SECRET: sheeesh
      JWT_ACCESS_TOKEN_LIFETIME: 1h
      JWT_REFRESH_TOKEN_LIFETIME: 1d
      SPRING_KAFKA_CONSUMER_BOOTSTRAP_SERVERS: kafka:9092
      SPRING_KAFKA_PRODUCER_BOOTSTRAP_SERVERS: kafka:9092

  api-gateway:
    build: ./lab_4/api-gateway
    image: api-gateway
    ports:
      - "8080:8080"
    environment:
      SERVER_PORT: 8080
      JWT_SECRET: sheeesh
      AUTH_URI: http://user-service:8081
      USER_URI: http://user-service:8081
      BOOKING_URI: http://booking-service:8082
      APARTMENT_URI: http://booking-service:8082
      AUTH_PATH: /v1/api/auth/**
      USER_PATH: /v1/api/users/**
      BOOKING_PATH: /v1/api/booking/**
      APARTMENT_PATH: /v1/api/apartment/**

  email-service:
    build: ./lab_4/email
    image: email-service
    ports:
      - "8083:8083"
    environment:
      SPRING_MAIL_USERNAME: boxride228@gmail.com
      SPRING_MAIL_PASSWORD: srrkdqwuegzhvtrd
      SPRING_KAFKA_CONSUMER_BOOTSTRAP_SERVERS: kafka:9092
      SPRING_KAFKA_PRODUCER_BOOTSTRAP_SERVERS: kafka:9092